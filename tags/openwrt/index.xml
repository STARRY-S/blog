<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>OpenWrt on STARRY-S&#39; Blog</title>
    <link>https://blog.starry-s.moe/tags/openwrt/</link>
    <description>Recent content in OpenWrt on STARRY-S&#39; Blog</description>
    <image>
      <title>STARRY-S&#39; Blog</title>
      <url>https://blog.starry-s.moe/avatar.png</url>
      <link>https://blog.starry-s.moe/avatar.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>© 2016 - 2023 STARRY-S | [CC BY-NC-ND 4.0](https://creativecommons.org/licenses/by-nc-nd/4.0/) | Hosted on [GitHub Pages](https://pages.github.com)</copyright>
    <lastBuildDate>Fri, 22 Jan 2021 22:10:01 +0800</lastBuildDate><atom:link href="https://blog.starry-s.moe/tags/openwrt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>小米路由器3G之使用TTL串口刷机救砖</title>
      <link>https://blog.starry-s.moe/posts/2021/xiaomi-r3g-ttl-flash/</link>
      <pubDate>Fri, 22 Jan 2021 22:10:01 +0800</pubDate>
      
      <guid>https://blog.starry-s.moe/posts/2021/xiaomi-r3g-ttl-flash/</guid>
      <description>&lt;p&gt;本来路由器闲置了一年了都没咋用了，前两天想把OpenWrt系统刷回原厂系统。&lt;/p&gt;
&lt;p&gt;然鹅刷原厂固件时忘记改环境变量了，因为第三方Boot Loader也被我顺带刷回了原厂的所以现在开机无限重启。&lt;/p&gt;
&lt;p&gt;之前买单片机套件时赠了一条usb转ttl线的，但是被我放学校了。只好再从万能的某宝再买一条线，尝试着救砖了。&lt;/p&gt;
&lt;p&gt;(在某宝发现了一家店啥元件都有，还特别便宜。于是我还顺带买了很多杜邦线、电阻、LED灯、面包板等小玩意&amp;hellip;)&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>本来路由器闲置了一年了都没咋用了，前两天想把OpenWrt系统刷回原厂系统。</p>
<p>然鹅刷原厂固件时忘记改环境变量了，因为第三方Boot Loader也被我顺带刷回了原厂的所以现在开机无限重启。</p>
<p>之前买单片机套件时赠了一条usb转ttl线的，但是被我放学校了。只好再从万能的某宝再买一条线，尝试着救砖了。</p>
<p>(在某宝发现了一家店啥元件都有，还特别便宜。于是我还顺带买了很多杜邦线、电阻、LED灯、面包板等小玩意&hellip;)</p>
<meting-js server="netease" type="song" id="409931672" theme="#233333"></meting-js>
<h2 id="砖了">砖了</h2>
<h2 id="拆机">拆机</h2>
<p><img loading="lazy" src="images/1.jpg" alt="&amp;ldquo;路由器主板&amp;rdquo;" />
<p style="margin-bottom: -0.8em;" class="image-title">Are You OK?</p>
</p>
<blockquote>
<p>北方冬季气候干燥，拆机时记得放静电，找根铁丝把自己连地线上 (找个金属外壳是接地的电器和自己连上也行)。</p>
</blockquote>
<p>拆开路由器外壳，卸下主板，顺手拆掉了散热片（屏蔽罩）。</p>
<p>串口在图片上主板的左侧，旁边有标记，从上到下依次是<code>TX</code>、<code>GND</code>、<code>RX</code>、<code>1</code>。需要注意的是主板上的<code>TX</code>要接到usb串口的<code>RX</code>，主板上的<code>RX</code>要接到usb串口的<code>TX</code>，<code>GND</code>连<code>GND</code>，VCC不用连。为了防止接错线，小米还十分贴心的标注了每个接口对应的连接线的颜色。</p>
<p><img loading="lazy" src="images/2.jpg" alt="" />
<p style="margin-bottom: -0.8em;" class="image-title">I&#39;m very OK!</p>
</p>
<p>找出家里吃灰好几年差点被我扔掉的电烙铁，刮刀头刮了半天电烙铁才上锡，把新买的杜邦线母线焊到主板上，和ttl串口线相连。</p>
<p>(电烙铁太破了根本焊不上锡，焊得很丑，emmm)</p>
<p>实际上可以买个4PIN单排针焊上去，把串口接到排针上就可以，我直接把电线焊到上面以后用起来会很麻烦。</p>
<h2 id="刷机">刷机</h2>
<blockquote>
<p>以下部分基于Arch Linux，其他系统的操作方式可能不一样（例如Windows可能需要超级终端访问串口，再想办法开一个tftp服务器）
刷机的原理: 通过ttl串口线连接路由器的主板，让路由器访问电脑上的tftp服务器，刷第三方Boot Loader。</p>
</blockquote>
<ol>
<li>首先电脑上装一个tftp服务器。</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo pacman -S tftp-hpa
</span></span><span class="line"><span class="cl">$ sudo systemctl start tftpd.service
</span></span></code></pre></div><p>tftp的默认目录为<code>/srv/tftp</code>。</p>
<p>这里使用HackPascal制作的Breed（第三方Boot Loader），<a href="https://breed.hackpascal.net/">下载链接</a>，把下载好的Breed重命名为<code>breed.bin</code>，复制到tftp的默认目录。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ cd /srv/tftp
</span></span><span class="line"><span class="cl">$ sudo cp ~/Downloads/breed-mt7620-xiaomi-r3g.bin breed.bin
</span></span></code></pre></div><ol start="2">
<li>
<p>路由器插网线连电脑，设置静态ip地址192.168.1.3/24，将串口和电脑连接，先不给路由器通电，通常情况下usb串口的设备名称为<code>/dev/ttyUSB0</code>，如果不确定的话可以<code>dmesg</code>查一下。</p>
</li>
<li>
<p>使用<code>screen</code>连接串口，波特率为115200。</p>
</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo pacman -S screen
</span></span><span class="line"><span class="cl">$ sudo screen /dev/ttyUSB0 115200
</span></span></code></pre></div><p>路由器通电，终端上会显示路由器启动的信息，等几秒后在选择启动项的时候按9，通过TFTP加载Boot Loader。</p>
<blockquote>
<p>如果串口在连接到电脑的情况下主板通电时没有响应，那就断开usb串口先给主板通电后再连接串口。
(我语文不好别骂我)
如果路由器没有变砖可以正常启动（蓝灯长亮），在正常开机过程中不能选择启动项。此时可以尝试在路由器开机后长按reset按钮7s以上直到主板重启，便可以选择启动项。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Please choose the operation:
</span></span><span class="line"><span class="cl"> 1: Load system code to SDRAM via TFTP.
</span></span><span class="line"><span class="cl"> 2: Load system code then write to Flash via TFTP.
</span></span><span class="line"><span class="cl"> 3: Boot system code via Flash (default).
</span></span><span class="line"><span class="cl"> 4: Entr boot command line interface.
</span></span><span class="line"><span class="cl"> 7: Load Boot Loader code then write to Flash via Serial.
</span></span><span class="line"><span class="cl"> 9: Load Boot Loader code then write to Flash via TFTP.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">You choosed 9
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">9: System Load Boot Loader then write to Flash via TFTP.
</span></span><span class="line"><span class="cl">Warning!! Erase Boot Loader in Flash then burn new one. Are you sure?(Y/N)y
</span></span></code></pre></div><p>之后设置路由器主机地址（192.168.1.1）和TFTP服务器地址(192.168.1.3)以及文件名称(breed.bin)。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Please Input new ones /or Ctrl-C to discard
</span></span><span class="line"><span class="cl">          Input device IP (192.168.31.1) ==:192.168.1.1
</span></span><span class="line"><span class="cl">          Input server IP (192.168.31.3) ==:192.168.1.3
</span></span><span class="line"><span class="cl">          Input Uboot filename (uboot.bin) ==:breed.bin
</span></span></code></pre></div><p>按回车后开始刷机，过几秒钟后路由器会自动重启，第三方Boot Loader刷写完成。</p>
<p>路由器断电，长按reset键的同时通电开机，灯闪烁后打开浏览器输入网址<code>http://192.168.1.1</code>便可访问breed后台。</p>
<h2 id="done">Done</h2>
<p>第三方Breed刷完后，先用Breed刷小米官方的开发版固件，开启ssh，之后按照<a href="/posts/2019/xiaomi_r3g_openwrt/#%E4%BD%BF%E7%94%A8Breed%E7%9A%84%E5%88%B7%E6%9C%BA%E6%96%B9%E6%B3%95">小米路由器3G折腾之刷OpenWrt记录</a>这篇文章刷OpenWrt。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">BusyBox v1.19.4 (2018-10-29 07:52:03 UTC) built-in shell (ash)
</span></span><span class="line"><span class="cl">Enter &#39;help&#39; for a list of built-in commands.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> -----------------------------------------------------
</span></span><span class="line"><span class="cl">       Welcome to XiaoQiang!
</span></span><span class="line"><span class="cl"> -----------------------------------------------------
</span></span><span class="line"><span class="cl">  $$$$$$\  $$$$$$$\  $$$$$$$$\      $$\      $$\        $$$$$$\  $$\   $$\
</span></span><span class="line"><span class="cl"> $$  __$$\ $$  __$$\ $$  _____|     $$ |     $$ |      $$  __$$\ $$ | $$  |
</span></span><span class="line"><span class="cl"> $$ /  $$ |$$ |  $$ |$$ |           $$ |     $$ |      $$ /  $$ |$$ |$$  /
</span></span><span class="line"><span class="cl"> $$$$$$$$ |$$$$$$$  |$$$$$\         $$ |     $$ |      $$ |  $$ |$$$$$  /
</span></span><span class="line"><span class="cl"> $$  __$$ |$$  __$$&lt; $$  __|        $$ |     $$ |      $$ |  $$ |$$  $$&lt;
</span></span><span class="line"><span class="cl"> $$ |  $$ |$$ |  $$ |$$ |           $$ |     $$ |      $$ |  $$ |$$ |\$$\
</span></span><span class="line"><span class="cl"> $$ |  $$ |$$ |  $$ |$$$$$$$$\       $$$$$$$$$  |       $$$$$$  |$$ | \$$\
</span></span><span class="line"><span class="cl"> \__|  \__|\__|  \__|\________|      \_________/        \______/ \__|  \__|
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@XiaoQiang:~#
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>小米路由器3G折腾之刷OpenWrt记录</title>
      <link>https://blog.starry-s.moe/posts/2019/xiaomi_r3g_openwrt/</link>
      <pubDate>Tue, 19 Feb 2019 00:49:20 +0800</pubDate>
      
      <guid>https://blog.starry-s.moe/posts/2019/xiaomi_r3g_openwrt/</guid>
      <description>&lt;p&gt;生命不息, 折腾不止&amp;hellip;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>生命不息, 折腾不止&hellip;</p>
<hr>
<meting-js server="netease" type="song" id="22802176" theme="#233333"></meting-js>
<blockquote>
<p>本篇由于创作时间过于久远，部分下载链接可能失效，因长期未更新，教程仅供参考。</p>
</blockquote>
<h2 id="准备工作">准备工作</h2>
<p>你至少需要以下工具：</p>
<ul>
<li>路由器本体</li>
<li>网线</li>
<li>一个已格式化为FAT/FAT32格式的U盘, 用来刷开发者固件和ssh激活工具</li>
<li>一根怼<code>Reset</code>钮的针</li>
<li>Windows用户需要一个SSH软件（例如：<a href="https://putty.org">putty</a>）</li>
<li><a href="http://www1.miwifi.com/miwifi_download.html">小米路由器客户端</a>, 用来绑定你的小米账号</li>
</ul>
<h2 id="ssh到路由器">SSH到路由器</h2>
<blockquote>
<p>路由器重启后指示灯会变为蓝色, 若变为红色则为刷机失败。</p>
</blockquote>
<p>安装开发者固件并开启SSH权限：</p>
<ol>
<li>
<p>在<a href="http://www1.miwifi.com/miwifi_download.html">MiWiFi下载页面</a>下载所需要的路由器开发者固件（ROM -&gt; ROM for R3G开发版）,命名为<code>miwifi.bin</code>。</p>
</li>
<li>
<p>路由器断电, 将下载好的开发者固件放入U盘插入路由器USB接口, 捅住reset扭接上电源后待指示灯为黄色闪烁时松开, 数分钟后路由器会自动重启, 此过程不要乱动路由器。</p>
</li>
<li>
<p>小米路由器客户端登陆小米账号绑定路由器设备, 此过程需要路由器联网。</p>
</li>
<li>
<p><a href="http://www1.miwifi.com/miwifi_open.html">MiWiFi开放平台</a>登陆小米账号下载ssh激活工具命名为<code>miwifi_ssh.bin</code>, 记下root密码。</p>
</li>
<li>
<p>操作方式同第二步骤, 刷入ssh激活工具。</p>
</li>
</ol>
<p>SSH到路由器:</p>
<ul>
<li>
<p>Windows系统用putty, ip为<code>191.168.31.1</code>, 用户名：<code>root</code>, 密码为下载激活ssh工具时记下的密码。</p>
</li>
<li>
<p>Unix/Linux系统终端执行：<code>ssh root@191.168.31.1</code></p>
<p>如果在ssh到路由器时遇到no matching key exchange method found错误，编辑<code>~/.ssh/config</code>, 加入下面两行：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Host *
</span></span><span class="line"><span class="cl">    KexAlgorithms +diffie-hellman-group1-sha1
</span></span></code></pre></div></li>
</ul>
<h2 id="刷入bootloader推荐可选">刷入Bootloader（推荐/可选）</h2>
<blockquote>
<p>该步骤可选是因为Breed不支持直接刷入Openwrt固件, 可参考<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=267455">这篇帖子</a>, 不过为了防止变砖, 还是推荐刷Breed。</p>
</blockquote>
<p>Breed原作者为hackpascal, <a href="https://breed.hackpascal.net/">此处为下载地址</a>, 文件名为<code>breed-mt7621-xiaomi-r3g.bin</code></p>
<p>第一种方法是ssh到路由器后通过<code>wget</code>下载breed文件再刷入（需要确保路由器联网）, 下载地址为https所以需要加上<code>--no-check-certificate</code>参数。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cd /tmp
</span></span><span class="line"><span class="cl">wget --no-check-certificate https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin -O breed.bin
</span></span><span class="line"><span class="cl">mtd -r write breed.bin Bootloader
</span></span></code></pre></div><p>另一种方法是将breed通过U盘拷贝到路由器再刷入。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir /tmp/sdcard
</span></span><span class="line"><span class="cl">mount /dev/sda1 /tmp/sdcard
</span></span><span class="line"><span class="cl">mtd -r write /tmp/sdcard/breed.bin Bootloader
</span></span></code></pre></div><p>路由器刷写完毕后会自动重启, <strong>在写入Breed的过程中不要动路由器</strong>。</p>
<h2 id="刷机">刷机</h2>
<p>下载所需固件：</p>
<ul>
<li>
<p>tuna镜像站的OpenWrt下载地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/lede/releases/">https://mirrors.tuna.tsinghua.edu.cn/lede/releases/</a></p>
</li>
<li>
<p>官方下载地址: <a href="https://downloads.openwrt.org/releases/">https://downloads.openwrt.org/releases/</a></p>
</li>
</ul>
<h3 id="使用breed的刷机方法">使用Breed的刷机方法</h3>
<p>按照hackpascal的说法是：</p>
<blockquote>
<p>如果kernel0存在kernel1不存在, 那么启动kernel0
如果kernel1存在kernel0不存在, 那么启动kernel1
如果kernel0和kernel1都存在, 那么检查环境变量 <code>xiaomi.r3g.bootfw</code> 的值, 如果存在且值为 2, 那么启动kernel1, 否则启动kernel0</p>
</blockquote>
<p>简单来说就是：路由器有两个内核, 需要在Breed里设置环境变量让路由器启动kernel1。</p>
<ol>
<li>刷入Openwrt固件到Kernel1</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-kernel1.bin kernel1
</span></span><span class="line"><span class="cl">mtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-rootfs0.bin rootfs0
</span></span></code></pre></div><ol start="2">
<li>
<p>路由器断电, 捅住reset按钮后通电, 待指示灯变为蓝色闪烁后用网线连接路由器到电脑, 浏览器打开网址<code>192.168.1.1</code>, 进入Breed界面。</p>
</li>
<li>
<p>在环境变量编辑里添加<code>xiaomi.r3g.bootfw</code>字段, 值为<code>2</code>,保存后重启即可进入Openwrt。</p>
</li>
</ol>
<h3 id="没有刷入breed的刷机方法">没有刷入Breed的刷机方法</h3>
<blockquote>
<p><a href="https://openwrt.org/toh/xiaomi/mir3g">OpenWrt官网提供的教程</a>是在没有刷入Breed的情况下刷入OpenWrt固件的。</p>
</blockquote>
<p>ssh到路由器, 导入固件后刷机。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-kernel1.bin kernel1
</span></span><span class="line"><span class="cl">mtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-rootfs0.bin rootfs0
</span></span><span class="line"><span class="cl">nvram set flag_try_sys1_failed=1
</span></span><span class="line"><span class="cl">nvram commit
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">reboot
</span></span></code></pre></div><hr>
<h2 id="others">Others</h2>
<ol>
<li>
<p>如果刷了Breed + Pandavan/PandoraBox后想换回OpenWrt的话, 首先在Breed中刷回小米路由器开发版的官方固件, 然后SSH到路由器按照上述的使用Breed的刷机方法再刷机。</p>
</li>
<li>
<p>USB3.0会对路由器的2.4G频段信号造成干扰。</p>
</li>
<li>
<p>OpenWrt默认语言为英文, 可安装<code>luci-i18n-base-zh-cn</code>,<code>luci-i18n-base-zh-tw</code>安装简体/繁体中文。</p>
</li>
<li>
<p><a href="http://openwrt-dist.sourceforge.net">OpenWrt-dist</a>可拓展更多功能。</p>
</li>
<li>
<p>为优化软件包安装速度, 可将opkg源改为国内：</p>
</li>
</ol>
<p>LuCI -&gt; System -&gt; Software -&gt; Configuration 中将 Distribution feeds 的<code>http://downloads.openwrt.org</code>替换为<code>http://mirrors.tuna.tsinghua.edu.cn/lede</code>。</p>
<ol start="6">
<li>OpenWrt可安装软件包<code>libustream-openssl</code> <code>libustream-mbedtls</code>解决<code>wget</code>无法访问https服务器问题。</li>
</ol>
<p>然后建议把opkg源能改为https的都改为https。</p>]]></content:encoded>
    </item>
    
  </channel>
</rss>
