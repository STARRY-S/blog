<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>2016 on STARRY-S&#39; Blog</title>
    <link>https://blog.starry-s.moe/posts/2016/</link>
    <description>Recent content in 2016 on STARRY-S&#39; Blog</description>
    <image>
      <title>STARRY-S&#39; Blog</title>
      <url>https://blog.starry-s.moe/avatar.png</url>
      <link>https://blog.starry-s.moe/avatar.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>© 2016 - 2023 STARRY-S | [CC BY-NC-ND 4.0](https://creativecommons.org/licenses/by-nc-nd/4.0/) | Hosted on [GitHub Pages](https://pages.github.com) &lt;br/&gt; &lt;span id=&#34;busuanzi_container_site_pv&#34;&gt;访问量&lt;span id=&#34;busuanzi_value_site_pv&#34;&gt;&lt;/span&gt;次&lt;/span&gt; |</copyright>
    <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.starry-s.moe/posts/2016/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>树莓派之我的世界服务器</title>
      <link>https://blog.starry-s.moe/posts/2016/raspberrypi-mc-server/</link>
      <pubDate>Fri, 25 Nov 2016 15:01:28 +0000</pubDate>
      
      <guid>https://blog.starry-s.moe/posts/2016/raspberrypi-mc-server/</guid>
      <description>&lt;p&gt;刚买树莓派3B时就想弄一个我的世界服务器，但是那时不懂Linux，服务器也就没建成。这一阵子打算把这个计划再捡起来，和同学一起联机的话树莓派还是能做到的。ARM系列的CPU性能肯定比X86_64电脑的CPU弱许多，外加上树莓派1G的运行内存，让它跑大型服务器肯定是不可能的，所以只能弄一个几个人联机的小服务器了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>刚买树莓派3B时就想弄一个我的世界服务器，但是那时不懂Linux，服务器也就没建成。这一阵子打算把这个计划再捡起来，和同学一起联机的话树莓派还是能做到的。ARM系列的CPU性能肯定比X86_64电脑的CPU弱许多，外加上树莓派1G的运行内存，让它跑大型服务器肯定是不可能的，所以只能弄一个几个人联机的小服务器了。</p>
<blockquote>
<p>本篇由于创作时间过于久远，部分下载链接可能失效，因长期未更新，教程仅供参考。</p>
</blockquote>
<blockquote>
<p>终于可以继续更新博客了！原计划是11月之前更新博客的。不巧电脑出了问题，重装了一遍Arch Linux,后来又发生了一些事一直没能用电脑。由于开学到现在能放假供我写博客的时间少之又少，这篇原本在11月初就能发表的文章就这样被硬生生推迟到了11月末了。</p>
</blockquote>
<h2 id="材料以及工具">材料以及工具</h2>
<ul>
<li>树莓派一只 （包括所需要的C10的内存卡以及刷好的固件以及5v，2.5A充电器）</li>
<li>一个支持DDNS的路由器（非必须）</li>
</ul>
<blockquote>
<p>如果不想用树莓派建服务器的话也可以按照本教程在电脑上搭建服务器。</p>
</blockquote>
<h2 id="配置树莓派">配置树莓派</h2>
<h3 id="调整gpu可使用的内存">调整GPU可使用的内存：</h3>
<p>毕竟用树莓派开服务器不需要占用GPU，直接调低。</p>
<p>Raspbian: <code>raspi-config</code>中将GPU内存分为16M。</p>
<p>Arch Linux ARM: <code>/boot/config.txt</code>中更改GPU显存为16</p>
<h2 id="安装java">安装JAVA</h2>
<p>Archlinux ARM:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo pacman -S jre8-openjdk
</span></span></code></pre></div><p>通用方法：
前往 <strong><a href="http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html">JAVA下载页</a></strong> 下载树莓派（ARM架构，32位系统）所支持的JDK。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ mkdir ./java
</span></span><span class="line"><span class="cl">$ tar -zxvf 你所下载的JDK.jar.gz -C ./java/
</span></span></code></pre></div><p>在终端输入<code>./java/jdk1.8.0/bin/java -version</code>显示java的版本号。</p>
<h2 id="部署服务器">部署服务器</h2>
<p>本篇使用<a href="https://github.com/PaperMC/Paper">Paper MC</a>部署服务器。
除了Paper之外还有Bukkit和Spigot以及原版可选。</p>
<p>使用以下命令启动服务器。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ echo eula=True &gt; eula.txt
</span></span><span class="line"><span class="cl">$ ./java/jdk*/bin/java -Xms512M -Xmx1024M -jar ./spigot.jar
</span></span></code></pre></div><p>第一次运行会下载一些文件需要一定的时间。</p>
<p>网上有很多服务器插件和Mod什么的。本章中不做过多介绍.</p>
<h2 id="用screen-保持服务器一直运行而不被关掉">用screen 保持服务器一直运行而不被关掉。</h2>
<p>首先安装好screen。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ screen
</span></span><span class="line"><span class="cl">$ ./java/jdk1.8.0/bin/java -Xms512M -Xmx1024M -jar./paperclip.jar
</span></span></code></pre></div><p>在配置好你的服务器后就可以和小伙伴一起联机了。经过测试几个人简单的联机运行蛮正常的。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Everything is based on “Hello World”</title>
      <link>https://blog.starry-s.moe/posts/2016/hello-world/</link>
      <pubDate>Mon, 22 Aug 2016 14:22:54 +0800</pubDate>
      
      <guid>https://blog.starry-s.moe/posts/2016/hello-world/</guid>
      <description>&lt;p&gt;你好，世界！&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>你好，世界！</p>
<p><img loading="lazy" src="images/image.jpg" alt="&amp;ldquo;Hello World&amp;rdquo;" />
<p style="margin-bottom: -0.8em;" class="image-title">Hello World</p>
</p>
<!-- <meting-js server="netease" type="song" id="593814" theme="#233333"></meting-js> -->
<meting-js server="netease" type="song" id="594295" theme="#233333"></meting-js>
<hr>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
